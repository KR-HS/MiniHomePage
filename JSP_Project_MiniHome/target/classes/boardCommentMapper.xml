<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardComment">
	<!-- 지정 번호의 댓글의 개수 구하기 -->
	<select id="selectCount" parameterType="int" resultType="int">
		select count(*) from boardComment where idx_ref=#{idx_ref}
	</select>
	<!-- 지정 번호의 댓글 1페이지 구하기 -->
	<select id="selectList" parameterType="hashmap" resultType="BoardCommentVO">
	select
			R.*
		from
			( select 
				rownum rnum, Q.*
			  from	
				(select * from boardComment where idx_ref=#{idx_ref} order by idx desc) Q
			  where
			  	<![CDATA[
			  	rownum  <= #{endNo}
			  	]]>
			) R
		where
			<![CDATA[
			rnum  >= #{startNo}
			]]>
	
	</select>
	<!-- 1개얻기 -->
	<select id="selectByIdx" parameterType="int" resultType="BoardCommentVO">
		select * from boardComment where idx=#{idx}
	</select>
	<!-- 저장 -->
	<insert id="insert" parameterType="BoardCommentVO">
		insert into boardComment
			(idx,idx_ref,userid,password,content,regdate)
		values
			(boardComment_idx_seq.nextval,#{idx_ref},#{userid},#{password},#{content},SYSDATE)			
	</insert>
	<!-- 수정 -->
	<update id="update" parameterType="BoardCommentVO">
		update boardComment set content=#{content}, regDate=SYSDATE where idx=#{idx} 
	</update>
	<!-- 삭제 -->
	<delete id="delete" parameterType="int">
		delete from boardComment where idx=#{idx}
	</delete>
	<!-- 지정 번호의 댓글 모두 지우기 -->
	<delete id="deleteByRef" parameterType="int">
		delete from boardComment where idx_ref=#{idx_ref}
	</delete>
</mapper>
